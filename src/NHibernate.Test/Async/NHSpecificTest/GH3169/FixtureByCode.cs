//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Cfg.MappingSchema;
using NHibernate.Mapping.ByCode;
using NHibernate.Transform;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.GH3169
{
	using System.Threading.Tasks;
	[TestFixture]
	public class ByCodeFixtureAsync : TestCaseMappingByCode
	{
		public class ResultDto
		{
			public string regionCode { get; set; }
		}

		protected override HbmMapping GetMappings()
		{
			var mapper = new ModelMapper();
			return mapper.CompileMappingForAllExplicitlyAddedEntities();
		}


		[Test]
		public async Task CachedQueryWithTransformerAsync()
		{
			Task<IList<ResultDto>> GetCacheableSqlQueryResultsAsync(ISession s)
			{
				try
				{
					return s.CreateSQLQuery(
								"select 'REGIONCODE' as regionCode  ")
							.AddScalar("regionCode", NHibernateUtil.String)
							.SetResultTransformer(Transformers.AliasToBean<ResultDto>())
							.SetCacheable(true)
							.ListAsync<ResultDto>();
				}
				catch (System.Exception ex)
				{
					return Task.FromException<IList<ResultDto>>(ex);
				}
			}

			using (var session = OpenSession())
			{
				using (EnableStatisticsScope())
				{
					var l = await (GetCacheableSqlQueryResultsAsync(session));
					Assert.AreEqual(1, l.Count);
					//Uncomment if we properly fix caching auto discovery type queries with transformers
					//Assert.That(Sfi.Statistics.QueryCacheMissCount, Is.EqualTo(1), "results are expected from DB");
					//Assert.That(Sfi.Statistics.QueryCacheHitCount, Is.EqualTo(0), "results are expected from DB");
				}

				using (EnableStatisticsScope())
				{
					var l2 = await (GetCacheableSqlQueryResultsAsync(session));
					Assert.AreEqual(1, l2.Count);
					//Uncomment if we properly fix caching auto discovery type queries with transformers
					//Assert.That(Sfi.Statistics.QueryCacheMissCount, Is.EqualTo(0), "results are expected from cache");
					//Assert.That(Sfi.Statistics.QueryCacheHitCount, Is.EqualTo(1), "results are expected from cache");
				}
			}
		}
	}
}
